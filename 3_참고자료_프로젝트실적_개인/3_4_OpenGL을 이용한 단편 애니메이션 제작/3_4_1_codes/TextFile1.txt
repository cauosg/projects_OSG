vec3 pos1, pos2;
mat4 view;
 
vec3 eye = { 3.0f, 3.0f, 5.5f };
vec3 at = { 0.0f, 1.25f, 0.0f };
vec3 up = { 0.0f, 1.0f, 0.0f };
 

void mouse(int button, int state, int x, int y)
{
	float u, v;
	u = (float)x / (WIDTH / 2) - 1.0;
	v = (float)(HEIGHT - y) / (HEIGHT / 2) - 1.0;
 
	if (state == GLUT_DOWN) {
		pos1.x = u;
		pos1.y = v;
		pos1.z = sqrtf(1.0 - u*u - v*v);
	}
 
	if (state == GLUT_UP) {
		pos2.x = u;
		pos2.y = v;
		pos2.z = sqrtf(1.0 - u*u - v*v);
 
		if (pos1.x == pos2.x || pos1.y + pos2.y)
			return;
		float scailfactor = 1 - (pos2.x - pos1.x + pos2.y + -pos1.y) / 2;
		vec3 n = cross(pos1, pos2);
		float theta = 180.0*length(n) / M_PI;
		mat4 now(1.0);
		vec4 temp;
		switch (button) {
		case GLUT_LEFT_BUTTON:
			temp = mvmult(Rotate(theta, n), vec4(eye.x, eye.y, eye.z, 1));
			eye.x = temp.x;
			eye.y = temp.y;
			eye.z = temp.z;
			temp = mvmult(Rotate(theta, n), vec4(at.x, at.y, at.z, 1));
			at.x = temp.x;
			at.y = temp.y;
			at.z = temp.z;
			break;
		case GLUT_RIGHT_BUTTON:
			temp = mvmult(Scale(vec3(scailfactor, scailfactor, scailfactor)), vec4(eye.x, eye.y, eye.z, 1));
			eye.x = temp.x;
			eye.y = temp.y;
			eye.z = temp.z;
			break;
		case GLUT_MIDDLE_BUTTON:
			temp = mvmult(Translate(vec3(pos1.x - pos2.x, pos1.y - pos2.y, pos1.z - pos2.z)), vec4(eye.x, eye.y, eye.z, 1));
			eye.x = temp.x;
			eye.y = temp.y;
			eye.z = temp.z;
			temp = mvmult(Translate(vec3(pos1.x - pos2.x, pos1.y - pos2.y, pos1.z - pos2.z)), vec4(at.x, at.y, at.z, 1));
			at.x = temp.x;
			at.y = temp.y;
			at.z = temp.z;
			break;
		}
	}
	glutPostRedisplay();
}
 
 